definitions:
  models.CityGetAllResponseItem:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.UserLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.UserLoginResponse:
    properties:
      accessToken:
        type: string
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  models.UserRegisterRequest:
    properties:
      address:
        $ref: '#/definitions/models.UserRegisterRequestAddress'
      age:
        type: integer
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.UserRegisterRequestAddress:
    properties:
      cityID:
        type: string
      street:
        type: string
    required:
    - cityID
    - street
    type: object
  models.UserRegisterResponse:
    properties:
      address:
        $ref: '#/definitions/models.UserRegisterResponseAddress'
      age:
        type: integer
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  models.UserRegisterResponseAddress:
    properties:
      cityID:
        type: string
      street:
        type: string
    type: object
info:
  contact: {}
  description: Social APP API
  title: Social APP API
  version: "1.0"
paths:
  /api/city/all:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CityGetAllResponseItem'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all cities
      tags:
      - City
  /api/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User login request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login a user
      tags:
      - User
  /api/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User registration request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Register a new user
      tags:
      - User
securityDefinitions:
  bearerToken:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
